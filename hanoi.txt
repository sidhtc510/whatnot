Для решения используем рекурсивный алгоритм. Если у нас есть три стержня: начальный (A), вспомогательный (B) и конечный (C), и на начальном стержне расположены диски в порядке убывания размеров, то мы можем решить задачу следующим образом:

Переложить n-1 диск с начального стержня на вспомогательный (используя конечный стержень).
Переложить самый большой диск с начального стержня на конечный.
Переложить n-1 диск с вспомогательного стержня на конечный (используя начальный стержень).


function hanoi(n, start, end, tmp) {
  if (n === 1) {
    console.log(`Move disk 1 from ${start} to ${end}`);
  } else {
    hanoi(n - 1, start, tmp, end);
    console.log(`Move disk ${n} from ${start} to ${end}`);
    hanoi(n - 1, tmp, end, start);
  }
}

hanoi(3, 'A', 'C', 'B');


В этом примере функция hanoi принимает три параметра: количество дисков n, начальный стержень start, конечный стержень end и вспомогательный стержень tmp. Функция использует рекурсию для перемещения дисков с начального стержня на конечный, используя вспомогательный стержень.

Для решения Ханойской башни с 3 дисками в примере выше мы используем стержни A, B и C. Вызов hanoi(3, 'A', 'C', 'B') перенесет три диска с начального стержня A на конечный стержень C, используя вспомогательный стержень B.

